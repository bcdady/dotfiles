#!/bin/bash

# Exit on error, treat unset variables as error
set -euo pipefail

# Function to check if command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Function to install with error handling
install_tool() {
    local tool="$1"
    local install_cmd="$2"
    
    if ! command_exists "$tool"; then
        echo "Installing $tool..."
        eval "$install_cmd" || {
            echo "Warning: Failed to install $tool"
            return 1
        }
        echo "✓ $tool installed successfully"
    else
        echo "✓ $tool already installed"
    fi
}

echo "Starting tools setup..."
echo ""
{{- if eq .chezmoi.os "darwin" }}
echo "Setting up macOS tools..."

# Check if Homebrew is installed
if ! command_exists brew; then
    echo "Error: Homebrew is required but not installed"
    echo "Install with: /bin/bash -c \"\$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\""
    exit 1
fi

# Core development tools
install_tool git "brew install git"
install_tool code "brew install --cask visual-studio-code"
install_tool tldr "brew install tldr"

# Terminal and productivity
install_tool warp-terminal "brew install --cask warp"
install_tool meld "brew install --cask dehesselle-meld"

# Communication and browsers
install_tool slack "brew install --cask slack"
install_tool firefox "brew install --cask firefox"
install_tool discord "brew install --cask discord"

# Security and Kubernetes tools
install_tool bitwarden "brew install --cask bitwarden"
install_tool bw "brew install bitwarden-cli"
install_tool aptakube "brew install --cask aptakube"
{{- else if eq .chezmoi.os "linux" }}
echo "Setting up Linux tools..."

# Create temp directory for downloads
TOOLS_DIR="${HOME}/Downloads/Tools"
mkdir -p "$TOOLS_DIR"

# Function for .deb package installation
install_deb() {
    local name="$1"
    local url="$2"
    local filename="$3"
    
    echo "Downloading $name..."
    wget "$url" -O "$TOOLS_DIR/$filename" || return 1
    sudo dpkg -i "$TOOLS_DIR/$filename" || {
        sudo apt-get install -f -y  # Fix dependencies
        sudo dpkg -i "$TOOLS_DIR/$filename"
    }
    rm -f "$TOOLS_DIR/$filename"  # Cleanup
}

# Core development tools
install_tool git "sudo apt install -y git-all"
install_tool code "sudo snap install code --classic"
install_tool tldr "sudo snap install tldr"
install_tool meld "sudo apt install -y meld"

# Terminal (Warp requires special handling)
if ! command_exists warp-terminal; then
    install_deb "Warp Terminal" "https://app.warp.dev/get_warp?package=deb" "warp.deb"
fi

# Communication tools
install_tool slack "sudo snap install slack"
install_tool discord "sudo snap install discord"

# Security tools
install_tool bitwarden "sudo snap install bitwarden"
install_tool bw "sudo snap install bw"

# Kubernetes tools (Aptakube requires special handling)
if ! command_exists aptakube; then
    install_deb "Aptakube" "https://github.com/aptakube/aptakube/releases/download/1.10.4/aptakube_1.10.4_amd64.deb" "aptakube.deb"
fi

# Linux-specific tools
install_tool espanso "sudo snap install espanso --classic"

# Cleanup
rmdir "$TOOLS_DIR" 2>/dev/null || true
{{- end }}

echo ""
echo "✓ Tools setup completed successfully!"
